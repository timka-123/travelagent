from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from sqlalchemy.orm import create_session

from database import engine, User
from utils import ProfileEditStates, OpenStreetMapsClient


router = Router()


@router.callback_query(F.data == "profile")
async def profile_callback(call: CallbackQuery, state: FSMContext):
    await state.clear()
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(text="üìù –ò–º—è", callback_data=f"prchange|name"),
        InlineKeyboardButton(text="‚è∞ –í–æ–∑—Ä–∞—Å—Ç", callback_data=f"prchange|age"),
        InlineKeyboardButton(text="üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", callback_data=f"prchange|place"),
        InlineKeyboardButton(text="üìù –û —Å–µ–±–µ", callback_data=f"prchange|bio"),
    )
    builder.adjust(2)
    builder.row(
        InlineKeyboardButton(text="üè° –û–±—Ä–∞—Ç–Ω–æ", callback_data="home")
    )

    session = create_session(engine)
    user = session.get(User, call.from_user.id)
    session.close()

    await call.message.edit_text(
        text=f"""<b>ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—Å</b>
        
üìù –ò–º—è: <b>{user.name}</b>
‚è∞ –í–æ–∑—Ä–∞—Å—Ç: <i>{user.age} –ª–µ—Ç</i>
üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: <b>{user.country} - {user.city}</b>
üìù –û —Å–µ–±–µ: <code>{user.bio}</code>

üìù –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –Ω–∞ –∫–ª–∏–≤–∏–∞—Ç—É—Ä–µ –Ω–∏–∂–µ
""",
        reply_markup=builder.as_markup()
    )


@router.callback_query(F.data.startswith("prchange|"))
async def request_need_data(call: CallbackQuery, state: FSMContext):
    action = call.data.split("|")[1]
    await state.set_state(ProfileEditStates.ENTER_DATA)
    await state.update_data(action=action)
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="profile")
    )

    if action == "name":
        await call.message.edit_text(
            text="üìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è",
            reply_markup=builder.as_markup()
        )
    elif action == "bio":
        await call.message.edit_text(
            text="üìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –í–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è",
            reply_markup=builder.as_markup()
        )
    elif action == "age":
        await call.message.edit_text(
            text="üìù –í–≤–µ–¥–∏—Ç–µ –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç",
            reply_markup=builder.as_markup()
        )
    elif action == "place":
        await call.message.edit_text(
            text="üìç –û—Ç–ø—Ä–∞–≤—å—Ç–µ –í–∞—à—É —Ç–µ–∫—É—â—É—é –ª–æ–∫–∞—Ü–∏—é, –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏ —Å—Ç—Ä–∞–Ω—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª",
            reply_markup=builder.as_markup()
        )


@router.message(ProfileEditStates.ENTER_DATA)
async def apply_data(message: Message, state: FSMContext):
    data = await state.get_data()
    action = data['action']
    session = create_session(engine)
    user = session.get(User, message.from_user.id)
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="profile")
    )

    if action == "place":
        client = OpenStreetMapsClient()
        if message.location:
            city = await client.get_location_info(
                lat=message.location.latitude,
                lon=message.location.longitude
            )
            if not city:
                return await message.answer(
                    text=f"‚ùå –ù–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏",
                    reply_markup=builder.as_markup()
                )
            user.city = city.city_name
            user.country = city.country
            session.commit()
        else:
            parts = message.text.split()
            country = parts[-1]
            try:
                parts.remove(country)
                user.country = country
                info = await client.get_city(user.city)
                if not info:
                    return await message.answer(
                        text=f"‚ùå –ù–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç",
                        reply_markup=builder.as_markup()
                    )
                user.city = " ".join(parts)
                user.country = country
                session.commit()
            except:
                return await message.answer(
                    text=f"‚ùå –ù–µ —Å–º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
                    reply_markup=builder.as_markup()
                )
    elif action == "bio":
        user.bio = message.text
        try:
            session.commit()
        except:
            return await message.answer(
                text=f"‚ùå –ù–µ —Å–º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
                reply_markup=builder.as_markup()
            )
    elif action == "name":
        user.name = message.text
        try:
            session.commit()
        except:
            return await message.answer(
                text=f"‚ùå –ù–µ —Å–º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
                reply_markup=builder.as_markup()
            )
    elif action == "age":
        user.age = int(message.text)
        try:
            session.commit()
        except:
            return await message.answer(
                text=f"‚ùå –ù–µ —Å–º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
                reply_markup=builder.as_markup()
            )
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(text="üìù –ò–º—è", callback_data=f"prchange|name"),
        InlineKeyboardButton(text="‚è∞ –í–æ–∑—Ä–∞—Å—Ç", callback_data=f"prchange|age"),
        InlineKeyboardButton(text="üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", callback_data=f"prchange|place"),
        InlineKeyboardButton(text="üìù –û —Å–µ–±–µ", callback_data=f"prchange|bio"),
    )
    builder.adjust(2)
    builder.row(
        InlineKeyboardButton(text="üè° –û–±—Ä–∞—Ç–Ω–æ", callback_data="home")
    )

    session = create_session(engine)
    user = session.get(User, message.from_user.id)
    session.close()

    await message.answer(
        text=f"""<b>ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—Å</b>

üìù –ò–º—è: <b>{user.name}</b>
‚è∞ –í–æ–∑—Ä–∞—Å—Ç: <i>{user.age} –ª–µ—Ç</i>
üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: <b>{user.country} - {user.city}</b>
üìù –û —Å–µ–±–µ: <code>{user.bio}</code>

üìù –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –Ω–∞ –∫–ª–∏–≤–∏–∞—Ç—É—Ä–µ –Ω–∏–∂–µ
    """,
        reply_markup=builder.as_markup()
    )
